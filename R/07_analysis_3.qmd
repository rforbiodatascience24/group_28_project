```{r}
#| output: false
library("tidyverse")
library("here")
library("dplyr")
```

## Analysing the data

```{r}
data <- read_tsv(file = here("data/03_dat_aug.tsv.gz"), 
                       na = "NA", 
                      guess_max = 1001)
```

```{r}
data_test2 <- data |>
  filter(!is.na(age_at_diagnosis) & !is.na(days_to_death))
```

### Plot of years at diagnosis vs age at diagnosis, by cancer stage.

The plots highlight the correlation between the age of patient diagnosed and when the patient dies and by which diagnosis (stage).

```{r}

# Ensure the cancer_stage is a factor with a proper order
test_data <- data |>
  filter(!is.na(age_at_diagnosis) & !is.na(days_to_death)) |>
  mutate(
    cancer_stage = factor(
      cancer_stage,
      levels = c(
        "Stage I", "Stage IA", "Stage IB", "Stage II", 
        "Stage IIA", "Stage IIB", "Stage III", "Stage IIIA", 
        "Stage IIIB", "Stage IIIC", "Stage IV"
      )
    )
  )

# Calculate correlation coefficients for each cancer stage
correlations <- test_data |>
  group_by(cancer_stage) |>
  summarize(
    correlation = cor(age_at_diagnosis_years, years_from_diagnosis_to_death, use = "complete.obs")
  )

# Plot with correlations as text annotations
ggplot(test_data, aes(x = age_at_diagnosis_years, y = years_from_diagnosis_to_death, color = cancer_stage)) +
  geom_point(alpha = 0.7) + # Scatter points
  geom_smooth(method = "lm", se = FALSE, size = 1.2) + # Add linear trend line for each stage
  scale_color_manual(
    values = colorRampPalette(c("lightcoral", "darkred"))(length(unique(test_data$cancer_stage)))
  ) +
  facet_wrap(~ cancer_stage, scales = "free") + # Facet by cancer stage
  geom_text(
    data = correlations,
    aes(x = Inf, y = Inf, label = paste("cor.r =", round(correlation, 2))),
    inherit.aes = FALSE,
    hjust = 1.2, vjust = 1.5, size = 3
  ) +
  labs(
    title = "Age at Diagnosis vs Years to Death by Cancer Stage",
    x = "Age at Diagnosis (years)",
    y = "Years to Death",
    color = "Cancer Stage"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1) # Rotate x-axis labels
  )

# save plot (without printing save message)
suppressMessages(
  ggsave("../results/years_at_diagnosis_vs_years_to_death_by_stage.png")
)
```

Separate code for calculation of the correlations and mean age of diagnosis and mean days to death:

```{r}
# Compute correlation and summary statistics for each cancer stage
summary_stats_by_stage <- data |>
  filter(!is.na(age_at_diagnosis_years) & !is.na(years_from_diagnosis_to_death)) |> # Remove rows with missing data
  group_by(cancer_stage) |>
  summarize(
    mean_age = mean(age_at_diagnosis_years, na.rm = TRUE),           # Mean age at diagnosis
    mean_days_to_death = mean(years_from_diagnosis_to_death, na.rm = TRUE), # Mean years to death
    correlation = cor(age_at_diagnosis_years, years_from_diagnosis_to_death, use = "complete.obs") # Correlation
  )

# Print the results
print(summary_stats_by_stage)


```

### Plot of years at diagnosis vs age at diagnosis.

```{r}
ggplot(data, aes(x = age_at_diagnosis_years, y = years_from_diagnosis_to_death)) +
  geom_point(alpha = 0.7) +
  geom_smooth(method = "lm", color = "red") + # Adds a trend line
  labs(
    title = "Age at Diagnosis vs Years to Death",
    x = "Age at Diagnosis (years)",
    y = "Years to Death"
  ) +
  theme_minimal()
```

Separate code for calculation of the correlation and mean age of diagnosis and mean years to death:

```{r}
# Compute correlation and summary statistics for each cancer stage
summary_stats <- data |>
  filter(!is.na(age_at_diagnosis_years) & !is.na(years_from_diagnosis_to_death)) |> 
  # Remove rows with missing data
  summarize(
    mean_age = mean(age_at_diagnosis_years, 
                    na.rm = TRUE),           
    # Mean age at diagnosis
    mean_days_to_death = mean(years_from_diagnosis_to_death, 
                              na.rm = TRUE), 
    # Mean years to death
    correlation = cor(age_at_diagnosis_years, 
                      years_from_diagnosis_to_death, 
                      use = "complete.obs") # Correlation
  )

# Print the results
print(summary_stats)

```

```{r}
ggplot(data_test, aes(x = gene_expression, y = days_to_death)) +
  geom_point(alpha = 0.7) +
  geom_smooth(method = "lm", color = "blue") +
  labs(title = "Gene Expression vs Days to Death", 
       x = "Gene Expression", 
       y = "Days to Death") +
  theme_minimal()
```

```{r}
# Filter out "not reported" and NA values in `cancer_stage`
filtered_data <- test_data %>%
  filter(!is.na(cancer_stage), treatment != "not reported")

# Fit the linear model
lm_model <- lm(years_from_diagnosis_to_death ~ cancer_stage + age_at_diagnosis_years + treatment + prior_malignancy, data = filtered_data)

# Summary of the model
summary(lm_model)
```

```{r}
# Add predictions to the filtered_data
filtered_data <- filtered_data |>
  mutate(predicted_days_to_death = predict(lm_model))

# Plot actual vs. predicted
ggplot(filtered_data, aes(x = predicted_days_to_death, y = years_from_diagnosis_to_death)) +
  geom_point(alpha = 0.6) +
  geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") + # Ideal fit line
  labs(
    title = "Predicted vs Actual Years to Death",
    x = "Predicted Years to Death",
    y = "Actual Ywars to Death"
  ) +
  theme_minimal()

```
