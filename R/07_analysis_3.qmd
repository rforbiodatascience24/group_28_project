```{r}
#| output: false
library("tidyverse")
library("here")
library("dplyr")
```

## Analysing the data

```{r}
data <- read_tsv(file = here("data/03_dat_aug.tsv.gz"), 
                       na = "NA", 
                      guess_max = 1001)
```

### Plot of years at diagnosis vs age at diagnosis, by cancer stage.

The plots highlight the correlation between the age of patient diagnosed and when the patient dies and by which diagnosis (stage).

```{r}
# Step 1: Filter and factorize the data
test_data <- data |>
  filter(
    !is.na(age_at_diagnosis_years) & 
    !is.na(years_from_diagnosis_to_death)
  ) |>
  mutate(
    cancer_stage = factor(
      cancer_stage,
      levels = c(
        "Stage I", "Stage IA", "Stage IB", "Stage II", 
        "Stage IIA", "Stage IIB", "Stage III", "Stage IIIA", 
        "Stage IIIB", "Stage IIIC", "Stage IV"
      )
    )
  )

# Step 2: Calculate correlations for each cancer stage
correlations <- test_data |>
  group_by(cancer_stage) |>
  summarize(
    correlation = cor(age_at_diagnosis_years, years_from_diagnosis_to_death, use = "complete.obs"),
    .groups = "drop"
  )

# Step 3: Create the plot
test_data |>
  ggplot(aes(x = age_at_diagnosis_years, y = years_from_diagnosis_to_death, color = cancer_stage)) +
  geom_point(alpha = 0.7) + # Scatter points
  geom_smooth(method = "lm", se = FALSE, size = 1.2) + # Add linear trend line
  scale_color_manual(
    values = colorRampPalette(c("lightcoral", "darkred"))(9)
  ) +
  facet_wrap(~ cancer_stage, scales = "free") + # Facet by cancer stage
  geom_text(
    data = correlations,
    aes(x = Inf, y = Inf, label = paste("cor.r =", round(correlation, 2))),
    inherit.aes = FALSE,
    hjust = 1.2, vjust = 1.5, size = 3
  ) +
  labs(
    title = "Age at Diagnosis vs Years to Death by Cancer Stage",
    x = "Age at Diagnosis (years)",
    y = "Years to Death",
    color = "Cancer Stage"
  ) +
  scale_x_continuous(
    limits = c(20, 90), 
    breaks = seq(20, 90, by = 10)
  ) + # Set x-axis limits and breaks
  scale_y_continuous(
    limits = c(0, 15), 
    breaks = seq(0, 15, by = 2)
  ) + # Set y-axis limits and breaks
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1) # Rotate x-axis labels
  )

# Step 4: Save the plot
suppressMessages(
  ggsave("../results/years_at_diagnosis_vs_years_to_death_by_stage.png")
)


```

Separate code for calculation of the correlations and mean age of diagnosis and mean days to death:

```{r}
# Compute correlation and summary statistics for each cancer stage
summary_stats_by_stage <- data |>
  filter(
    !is.na(age_at_diagnosis_years) & 
    !is.na(years_from_diagnosis_to_death)
  ) |> 
  group_by(cancer_stage) |>
  summarize(
    # Compute mean age at diagnosis
    mean_age = mean(age_at_diagnosis_years, na.rm = TRUE),
    # Compute mean years from diagnosis to death
    mean_years_to_death = mean(years_from_diagnosis_to_death, na.rm = TRUE),
    # Compute correlation between age at diagnosis and years to death
    correlation = cor(age_at_diagnosis_years, years_from_diagnosis_to_death, use = "complete.obs"),
    .groups = "drop" # Prevent grouped output in results
  )

# Print the summary statistics by cancer stage
print(summary_stats_by_stage)



```

### Plot of years at diagnosis vs age at diagnosis.

```{r}
ggplot(data, aes(x = age_at_diagnosis_years, y = years_from_diagnosis_to_death)) +
  geom_point(alpha = 0.7) +
  geom_smooth(method = "lm", color = "red") + # Adds a trend line
  labs(
    title = "Age at Diagnosis vs Years to Death",
    x = "Age at Diagnosis (years)",
    y = "Years to Death"
  ) +
  theme_minimal()

# save plot (without printing save message)
suppressMessages(
  ggsave("../results/years_at_diagnosis_vs_years_to_death.png")
)
```

Separate code for calculation of the correlation and mean age of diagnosis and mean years to death:

```{r}
# Compute correlation and summary statistics for the dataset
summary_stats <- data |>
  filter(
    !is.na(age_at_diagnosis_years) & 
    !is.na(years_from_diagnosis_to_death)
  ) |>
  summarize(
    # Compute mean age at diagnosis
    mean_age = mean(age_at_diagnosis_years, na.rm = TRUE),
    # Compute mean years from diagnosis to death
    mean_years_to_death = mean(years_from_diagnosis_to_death, na.rm = TRUE),
    # Compute correlation between age at diagnosis and years to death
    correlation = cor(age_at_diagnosis_years, years_from_diagnosis_to_death, use = "complete.obs")
  )

# Print the summary statistics
print(summary_stats)
```

### Setup of linear model to describe years from diagnosis to death

```{r}
# Filter out rows where `cancer_stage` is NA or `treatment` is "not reported"
filtered_data <- data |>
  filter(
    !is.na(cancer_stage),
    treatment != "not reported"
  )

# Fit the linear model
lm_model <- lm(
  years_from_diagnosis_to_death ~ cancer_stage + age_at_diagnosis_years + treatment + prior_malignancy,
  data = filtered_data
)

# Display the summary of the linear model
summary(lm_model)
```

```{r}
# Filter out "not reported" and NA values in `cancer_stage`, and ensure no missing values in key variables
filtered_data <- data |>
  filter(
    !is.na(cancer_stage),
    treatment != "not reported",
    !is.na(age_at_diagnosis_years),
    !is.na(years_from_diagnosis_to_death)
  )

# Add predictions to the filtered data
filtered_data <- filtered_data |>
  mutate(predicted_years_to_death = predict(lm_model))
```

```{r}
# Plot actual vs. predicted
ggplot(filtered_data, aes(x = predicted_years_to_death, 
                          y = years_from_diagnosis_to_death)) +
  geom_point(alpha = 0.6) +
  geom_abline(slope = 1, 
              intercept = 0, 
              color = "red", 
              linetype = "dashed") + # Ideal fit line
  labs(
    title = "Predicted vs Actual Years to Death",
    x = "Predicted Years to Death",
    y = "Actual Years to Death"
  ) +
  theme_minimal()

# save plot (without printing save message)
suppressMessages(
  ggsave("../results/years_to_death_prediction.png")
)

```

```{r}
# Plot actual vs. predicted, faceted by treatment
filtered_data |>
  ggplot(aes(x = predicted_years_to_death, 
             y = years_from_diagnosis_to_death, 
             color = treatment)) +
  geom_point(alpha = 0.6) +
  geom_abline(slope = 1, 
              intercept = 0, 
              color = "red", 
              linetype = "dashed") + # Ideal fit line
  labs(
    title = "Predicted vs Actual Years to Death by Treatment",
    x = "Predicted Years to Death",
    y = "Actual Years to Death",
    color = "Treatment"
  ) +
  facet_wrap(~ treatment) + # Facet by treatment
  theme_minimal() +
  theme(
    strip.text = element_text(size = 10, 
                              face = "bold"),
    axis.text.x = element_text(angle = 45, 
                               hjust = 1) # Rotate x-axis labels
  )

```

```{r}
# Plot actual vs. predicted, faceted by treatment and prior malignancy
filtered_data |>
  ggplot(aes(x = predicted_years_to_death, 
             y = years_from_diagnosis_to_death, 
             color = treatment)) +
  geom_point(alpha = 0.6) +
  geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") + # Ideal fit line
  labs(
    title = "Predicted vs Actual Years to Death by Treatment and Prior Malignancy",
    x = "Predicted Years to Death",
    y = "Actual Years to Death",
    color = "Treatment"
  ) +
  facet_grid(prior_malignancy ~ treatment) + # Facet by treatment and prior malignancy
  theme_minimal() +
  theme(
    strip.text = element_text(size = 10, face = "bold"),
    axis.text.x = element_text(angle = 45, hjust = 1) # Rotate x-axis labels
  )

# Save the plot (silencing the save message)
suppressMessages(
  ggsave("../results/years_to_death_prediction_by_treatment_and_prior_malignancy.png")
)
```
