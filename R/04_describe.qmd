---
title: "04_describe"
format: html
editor: visual
---

### Loading packages

```{r}
#| output: false
library("tidyverse")
library("table1")
library("dplyr")
library("here")
library("ggridges")
library("patchwork")
library("viridis")
```

### Loading data

```{r}
data <- read_tsv(file = here("data/03_dat_aug.tsv.gz"), 
                 na = "NA", 
                 guess_max = 1001
                 )
```

```{r}
problems(data)
```

### Creating a table1 to summarize data

```{r}
data |>
  filter(!is.na(vital_status)) |>
  table1(x = formula(~ gender + ethnicity + age_group + cancer_stage | vital_status),
         data = _)

```

### Descriptive graphs

The below graph shows the amount of people for stage of cancer

```{r}
ggplot(data, 
       aes(y = cancer_stage, 
           fill = cancer_stage)) +
  geom_bar(stat = "count", alpha=0.7) +
  geom_text(stat = "count", aes(label = ..count..), 
            hjust = -0.1, size = 3.5, color = "black") +
  scale_x_continuous(limits = c(0, 900000), 
                     expand = c(0, 0)) +
  scale_fill_viridis_d(option = "plasma", 
                       na.value = "yellow3") +
  labs(
    title = "Number of People per Cancer Stage",
    x = "Count",
    y = "Cancer Stage"
  ) +
  theme_minimal(base_size = 12) + 
  theme(
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold"), 
    axis.text.x = element_text(hjust = 1, vjust = 1, face = "bold"), 
    axis.text.y = element_text(face = "bold"),  
    panel.grid = element_blank(),
    axis.line = element_line(color = "black", size = 0.1), 
    legend.position = "none"
    )
```

The below graph illustrates the sexes and ethnicities of the people tested (removed NA values)

```{r}
sex_and_ethnicity_data <- data |> 
  filter(!is.na(gender) & !is.na(ethnicity)) 
```

```{r}
ggplot(sex_and_ethnicity_data,
       aes(x = gender, 
           fill = ethnicity))+
  geom_bar(position = "fill", alpha = 0.7) +
  scale_fill_manual(values = c("hispanic or latino" = "lightgreen", 
                               "not hispanic or latino" = "deepskyblue3", 
                               "not reported" = "hotpink")) +
  labs(
    title = "Gender and Ethnicity Overview",
    x = "Gender",
    y = "Proportion", 
    fill = "Ethnicity"
  ) +
  theme_minimal()+
  theme(
  plot.title = element_text(hjust = 0.5, size = 16, face = "bold"), 
  axis.title = element_text(face="bold"),
  axis.text.x = element_text(size = 12), 
  axis.text.y = element_text(face = "bold"),  
  panel.grid = element_blank(),
  axis.line = element_line(color = "black", size = 0.1), 
  legend.position = "none"
  )

```

The below graph shows whether therapy and treatment have any effect on days to death

First we prepare the data

```{r}

treatment_graph_data <- data |>
    filter(!is.na(treatment), !is.na(days_to_death), treatment != "not reported")
  
therapy_graph_data  <- data |>
    filter(!is.na(therapy), !is.na(days_to_death), therapy != "not reported")

```

And now we can plot

```{r}

# Create the first plot (p1)
p1 <- ggplot(treatment_graph_data, 
             aes(x = treatment, 
                 y = days_to_death, 
                 fill = treatment)) +
  geom_boxplot() +
  labs(
    title = "Days to Death by Treatment",
    x = "Treatment",
    y = "Days to Death", 
    fill = NULL
  ) +
  theme_minimal(base_size = 10) +
  theme(
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    axis.text.x = element_text(hjust = 1, vjust = 1),
    strip.text = element_text(size = 12, face = "bold"),
    legend.position = "none" 
  )

p2 <- ggplot(therapy_graph_data, 
             aes(x = therapy, 
                 y = days_to_death, 
                 fill = therapy)) +
  geom_boxplot() +
  labs(
    title = "Days to Death by Therapy",
    x = "Therapy",
    y = "Days to Death",
    fill = NULL
  ) +
  theme_minimal(base_size = 10) +
  theme(
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    axis.text.x = element_text(hjust = 1, vjust = 1), 
    strip.text = element_text(size = 12, face = "bold"),
    legend.position = "none" 
  )

# Combine the two plots side by side
p1 / p2
```

Below shows whether therapy, treatment, both or neither have any effect on whether the patient lives or not

First we make a new data with a column specifying treatment combinations:

```{r}
combined_data <- data |>
  mutate(
    combined_category = case_when(
      therapy == "yes" & treatment == "yes" ~ "Both",
      therapy == "no" & treatment == "yes" ~ "Treatment Only",
      therapy == "yes" & treatment == "no" ~ "Therapy Only",
      therapy == "no" & treatment == "no" ~ "Neither",
      TRUE ~ NA_character_
    )
  ) |>
  filter(!is.na(combined_category), !is.na(vital_status))

```

And then we can plot:

```{r}
ggplot(combined_data, 
       aes(x = combined_category, 
           fill = vital_status)) +
  geom_bar(position = "fill", alpha=0.7) +
  scale_fill_manual(values = c("Alive" = "darkseagreen", "Dead" = "maroon")) +
  labs(
    title = "Vital Status by Therapy and Treatment Combination",
    x = "
    Therapy and Treatment Combination",
    y = "Proportion",
    fill = "Vital Status"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(size=12),
    axis.text.y = element_text(face = "bold"),
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    strip.text = element_text(size = 12, face = "bold"),
    panel.grid = element_blank(), 
    axis.line = element_line(color = "black")
  )
  scale_y_continuous(labels = scales::percent)
```

The below graph shows whether a given age is more likely to survive (probably could do more with this or make it fairer somehow)

```{r}

ggplot(data |> 
         filter(!is.na(age_at_diagnosis_years)), aes(x = age_at_diagnosis_years, fill = vital_status)) +
  geom_density(alpha = 0.3, position = "identity", adjust = 3) +  # adjust the smoothness
  scale_fill_manual(values = c("Alive" = "lightgreen", "Dead" = "maroon")) +
  labs(
    title = "Vital Status by Age",
    x = "Age at Diagnosis",
    y = "Density", 
    fill = "Vital Status"
  ) +
  theme_minimal()+
  theme(
  axis.text.y = element_text(face = "bold"),
  plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
  strip.text = element_text(size = 12, face = "bold"),
  legend.position = "top", 
  panel.grid = element_blank(), 
  axis.line = element_line(color = "black")
)
```

The following graphs shows the percentage of dead and alive people of each gender for each ethnicity.

Start by preparing the data:

```{r}

data_summary <- data |>
  filter(!is.na(gender) & !is.na(vital_status) & !is.na(ethnicity) & ethnicity != "not reported") |>
  group_by(gender, ethnicity, vital_status) |>
  summarise(count = n(), .groups = "drop") |>
  group_by(ethnicity, gender) |>
  
  mutate(total_count = sum(count)) |>
  
  ungroup() |>
  
  mutate(percentage = (count / total_count) * 100) |>
  mutate(percentage = ifelse(gender == "female",
                               percentage,
                               -1*percentage)) |>

  bind_rows(tibble(gender = "male", ethnicity = "hispanic or latino", vital_status = "Dead", percentage = 0))

```

Now we can plot:

```{r}

ggplot(data_summary, 
       aes(x = ethnicity, 
           y = ifelse(gender == "female", percentage, -percentage), 
           fill = vital_status)) +
  geom_bar(stat = "identity", position = "dodge", width = 0.7) + 
  geom_hline(yintercept = 0, color = "black", size = 0.5) +
  coord_flip() +
  scale_fill_manual(values = c("Alive" = "#66c2a5", "Dead" = "#fc8d62")) + 
  facet_wrap(~ gender, scales = "free_x", ncol = 2) + 
  labs(
    title = "Vitality by Ethnicity and Gender",
    x = NULL,
    y = "Percentage",
    fill = "Vital Status"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.text.y = element_text(face = "bold"),
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    strip.text = element_text(size = 12, face = "bold"),
    legend.position = "top"
  )
```

Whether prior malignancy affects days to death (could also be a density plot I just think violin plots are cool)

```{r}
ggplot(data |> 
         filter(!is.na(prior_malignancy) & !is.na(days_to_death)), 
       aes(x = prior_malignancy, y = days_to_death, fill = prior_malignancy)) +
  geom_violin() +  # Use violin plot
  scale_fill_manual(values = c("no" = "navyblue", "yes" = "maroon")) +
  labs(
    title = "Days to Death by Prior Malignancy",
    x = "Prior Malignancy",
    y = "Days to Death"
  ) +
  theme_minimal() +
  theme(
  axis.text.x = element_text(angle = 45, hjust = 1),
  axis.text.y = element_text(face = "bold"),
  plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
  strip.text = element_text(size = 12, face = "bold"),
  legend.position = "none"
)
```

The below graph(s) show(s) the vitality for each type of cancer.

First the category titles are too long to be legible, so we rename them to be shorter (this does affect the understanding a little, but is worth it to be allow the viewer to read the text):

```{r}

data_primary_diagnosis_graph <- data |>
  mutate(primary_diagnosis_short = recode(primary_diagnosis,
    "Infiltrating duct carcinoma, NOS" = "Infiltrating duct",
    "Infiltrating duct mixed with other types of carcinoma" = "Infiltrating duct mixed",
    "Lobular carcinoma, NOS" = "Lobular",
    "Medullary carcinoma, NOS" = "Medullary",
    "Large cell neuroendocrine carcinoma" = "Large cell neuroendocrine",
    "Infiltrating lobular mixed with other types of carcinoma" = "Infiltrating lobular mixed",
    "Intraductal papillary adenocarcinoma with invasion" = "Intraductal papillary adeno",
    "Mucinous adenocarcinoma" = "Mucinous adeno",
    "Phyllodes tumor, malignant" = "Phyllodes tumor",
    "Paget disease and infiltrating duct carcinoma of breast" = "Paget disease and duct",
    "Apocrine adenocarcinoma" = "Apocrine adeno",
    "Infiltrating duct and lobular carcinoma" = "Duct and lobular",
    "Secretory carcinoma of breast" = "Secretory",
    "Cribriform carcinoma, NOS" = "Cribriform",
    "Metaplastic carcinoma, NOS" = "Metaplastic",
    "Pleomorphic carcinoma" = "Pleomorphic",
    "Intraductal micropapillary carcinoma" = "Intraductal micropapillary",
    "Adenoid cystic carcinoma" = "Adenoid cystic",
    "Carcinoma, NOS" = "Carcinoma",
    "Papillary carcinoma, NOS" = "Papillary",
    "Basal cell carcinoma, NOS" = "Basal cell",
    "Tubular adenocarcinoma" = "Tubular adeno"
  )) |>
    
  filter(!is.na(primary_diagnosis_short) & !is.na(vital_status))

```

```{r}
ggplot(data_primary_diagnosis_graph,
       aes(x = vital_status, fill = vital_status)) +
  geom_bar() +
  scale_fill_manual(values = c("Alive" = "lightgreen", "Dead" = "maroon")) +
  facet_wrap(~ primary_diagnosis_short, scales = "free_y") +
  scale_y_continuous(breaks = NULL) +
  labs(title = "Vital Status by Primary Diagnosis",
       x = NULL,
       y = NULL, 
       fill = NULL) +
  theme_classic(base_size = 10) +
  theme(
    strip.text = element_text(size = 6, angle = 0, hjust = 0.5, vjust = 0.5), 
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    legend.position = "top"
  )
```

This can also be shown as a bar plot with proportions

```{r}
ggplot(data_primary_diagnosis_graph,
       aes(x = primary_diagnosis_short, 
           fill = vital_status)) +
  geom_bar(position = "fill") +
  scale_fill_manual(values = c("Alive" = "lightgreen", "Dead" = "maroon")) +
  labs(title = "Proportion of Vital Status by Primary Diagnosis", 
       x = "Primary Diagnosis", 
       y = "Proportion", 
       fill = "Vital Status")+
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1), 
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    ) 
```
